name: üì¶ Publish to TestPyPI ‚Üí PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: pip

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest build twine
      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  test_upload:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build & twine
        run: python -m pip install --upgrade pip build twine

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload \
            --repository-url https://test.pypi.org/legacy/ \
            dist/*

  # 2) PyPIÏóê Ïò¨Î¶¨Îäî Job (test_uploadÍ∞Ä ÏÑ±Í≥µÌï¥Ïïº ÏãúÏûë)
  publish_upload:
    needs: test_upload
    runs-on: ubuntu-latest

    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build & twine
        run: python -m pip install --upgrade pip build twine

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
